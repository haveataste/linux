# 安装docker
apt-get install docker.io || curl -fsSL https://get.docker.com -o docker.sh && sh docker.sh
# 让root外用户能直接使用docker命令
usermod -aG docker myarpanet
# 配置国内镜像源
mkdir -p /etc/docker
tee /etc/docker/daemon.json <<EOF
{
  "registry-mirrors": ["https://bwt3ktnp.mirror.aliyuncs.com"]
}
EOF
systemctl daemon-reload
systemctl restart docker

# 显示Docker系统信息，包括镜像和容器数
docker info
# 显示Docker版本信息
docker version
# 获取容器/镜像的元数据
docker inspect CONTAINER|IMAGE

# [REGISTRYHOST/][USERNAME/]IMAGENAME[:TAG]
# 查看本地镜像
docker images
# 删除镜像
docker rmi IMAGENAME[:TAG]
# 标记本地镜像，将其归入某一仓库
docker tag nginx:latest myarpanet/nginx:v1
# 仓库操作
docker login
docker login uhub.service.ucloud.cn -u user@qq.com
Password: 
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store
Login Succeeded
dokcer logout
# 拉取镜像
docker pull USERNAME/IMAGENAME:TAG
# 上传镜像
docker push myarpanet/nginx:v1

# 导出镜像到本地文件
docker save [-o file.tar] IMAGENAME:TAG
# 导入文件到本地镜像库
docker load [-i] file.tar
# 将容器打包为本地文件，相当于快照
docker export -o file.tar CONTAINER_ID
# 将容器导入成为一个新的镜像
docker import file.tar IMAGENAME:TAG

# 查看容器
docker ps [-a]
# 删除容器
docker rm CONTAINER_ID
# 运行容器
docker run -it IMAGENAME:TAG /bin/bash
docker run -d ubuntu:15.10 /bin/sh -c "while true; do echo hello world; sleep 1; done"
docker run -d --name v2ray -v ~/v2ray:/etc/v2ray -p 1081:1081 --restart=always v2ray/official
# 退出容器
exit, CTRL+P+Q, CTRL+D
# 重新进入运行中的容器
docker exec -it CONTAINER_ID /bin/bash
docker attach CONTAINER_ID
# 获取容器的日志
docker logs [-f] --since="2022-07-13" -t --tail=10 mynginx
# 容器打包成镜像
docker commit -a "author" -m "comment" CONTAINER_ID USERNAME/IMAGENAME:TAG
# 容器间网络互联
docker run --link=[container_name]:[alias] [image] [command]
# 配置拒绝容器间的访问
vim /etc/default/docker
DOCKER_OPTS="--icc=false"
# 只允许特定容器间的互联
--icc=false --iptables=true --link
iptables -F # 清除iptables
iptables -L -n # 查看iptables

# demo
docker pull nginx:latest
docker tag nginx myarpanet/nginx:200514
docker images
docker rmi nginx
docker run --name mynginx -p 8080:80 -d myarpanet/nginx:200514
docker logs ee4cd9
docker ps
docker ps -a
docker exec -it mynginx /bin/bash
docker cp somefile.html mynginx:/usr/share/nginx/html/
docker stop/start/restart mynginx
docker rm mynginx
