git clone https://github.com/usr/repo.git
git add <filename>|*
git commit -a --allow-empty-message -m ''
git push origin master

git remote -v # 显示当前仓库连接
git remote rm origin # 删除以防止远端链接占用
git remote add origin <server> # 连接远端仓库
git remote add origin https://usr:psd@github.com/usr/repo.git
ssh-keygen
git remote add origin git@github.com:usr/repo.git

git checkout -b feature_x # 创建分支并切换
git checkout master # 切回主分支
git branch # 列出本地分支
git branch -r # 列出远端分支
git branch -a # 列出本地和远程所有分支
git branch newbranch # 创建
git branch -m|-M oldname newname # 改名
git branch -d|-D branch_name # 删除

git push origin <branch> # 推送分支到远端
git pull <origin> <branch>
git merge <branch> # 合并其他分支到当前分支
git diff <source_branch> <target_branch>
git diff [master] origin/master
git log
git fetch origin # 同步远程服务器上的数据到本地
git reset --hard origin/master # 获取远端最新版本，放弃本地的改动和提交

.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore文件是无效的。
解决方法就是先把本地缓存删除（改变成未track状态），然后再提交:
git rm -r --cached .
git add .
git commit -m 'update .gitignore'
如果你想添加被.gitignore忽略的文件，可以用-f强制添加到Git：
git add -f App.class
